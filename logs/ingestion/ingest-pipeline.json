{
  "description": "Curity Logs Ingest Pipeline",
  "processors": [
    {
      "script": {
        "lang": "painless",
        "description": "Transform incoming data",
        "source": "
if (ctx['logtype'] == 'request') {

  String message = ctx['message'];
  String[] fieldPairs = message.splitOnToken(' ');

  Map http = [:];
  for (int i = 0; i < fieldPairs.length; i++) {

    String[] parts = fieldPairs[i].splitOnToken('=');
    if (parts.length == 2) {
      String value = parts[1];
      
      if (value.length() >= 2) {
        value = value.substring(1, value.length() - 1);
      }
      http[parts[0]] = value;
    }
  }

  ctx['http'] = http;
  ctx['message'] = '';
}

if (ctx['logtype'] == 'audit') {

  String message = ctx['message'];

  Map audit = [:];
  audit['type'] = message.splitOnToken(' ')[0];

  int start = message.indexOf('[');
  int end   = message.indexOf(']');
  if (start >= 0 && end >= 0 && end > start) {
    
    String messageFieldText = message.substring(start + 1, end);
    String[] fieldPairs = messageFieldText.splitOnToken(' ');

    audit['id'] = fieldPairs[0];
    for (int i = 1; i < fieldPairs.length; i++) {

      String[] parts = fieldPairs[i].splitOnToken('=');
      if (parts.length == 2) {
        String value = parts[1];
        
        if (value.length() >= 2) {
          value = value.substring(1, value.length() - 1);
        }
        audit[parts[0]] = value;
      }
    }
  }

  ctx['audit'] = audit;
  ctx['message'] = '';
}"
      },
      "remove": {
        "field": ["endOfBatch", "instant", "log", "marker", "stream", "fields"],
        "ignore_missing": true
      }
    }
  ]
}
