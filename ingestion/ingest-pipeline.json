{
  "description": "Curity Logs Ingest Pipeline",
  "processors": [
    {
      "script": {
        "lang": "painless",
        "description": "Transform incoming data",
        "source": "
def fields = ctx['fields'];
if (fields != null) {

  if (ctx['timeMillis'] != null) {
    ctx['eventTime'] = Instant.ofEpochMilli(ctx['timeMillis']);
    ctx.remove('timeMillis');
  }

  String logtype = fields['logtype'];
  if (logtype == 'system') {

    String message = ctx['message'];
    Map system = [:];

    int start = message.indexOf('[');
    int end   = message.indexOf(']');
    if (start >= 0 && end >= 0 && end > start) {

      String type = message.substring(0, start);  
      if (type.length() >= 1) {
        system['type'] = type;
      }

      String messageFieldText = message.substring(start + 1, end);
      String[] fieldPairs = messageFieldText.splitOnToken(',');
      if (fieldPairs.length > 0) {

        for (int i = 0; i < fieldPairs.length; i++) {

          String[] parts = fieldPairs[i].splitOnToken('=');
          if (parts.length == 2) {

            String key = parts[0];
            String value = parts[1];
            if (key.substring(0, 1) == '_') {
              key = key.substring(1, key.length());
            }

            if (key == 'httpStatus') {
              system[key] = Integer.parseInt(value);
            } else {
              system[key] = value;
            }
          }
        }

        ctx['system'] = system;
        ctx.remove('message');
      }
    }
  }
  
  if (logtype == 'request') {

    String message = ctx['message'];
    String[] fieldPairs = message.splitOnToken(' ');
    if (fieldPairs.length > 0) {

      Map request = [:];
      for (int i = 0; i < fieldPairs.length; i++) {

        String[] parts = fieldPairs[i].splitOnToken('=');
        if (parts.length == 2) {
          
          String key = parts[0];
          String value = parts[1];
          if (value.length() >= 2) {
            value = value.substring(1, value.length() - 1);
          }

          if (key == 'duration' || key == 'size' || key == 'status') {
            request[key] = Integer.parseInt(value);
          } else {
            request[key] = value;
          }
        }
      }

      ctx['request'] = request;
      ctx.remove('message');
    }
  }

  if (logtype == 'audit') {

    String message = ctx['message'];

    Map audit = [:];
    audit['type'] = message.splitOnToken(' ')[0];

    int start = message.indexOf('[');
    int end   = message.indexOf(']');
    if (start >= 0 && end >= 0 && end > start) {
      
      String messageFieldText = message.substring(start + 1, end);
      String[] fieldPairs = messageFieldText.splitOnToken(' ');
      if (fieldPairs.length > 0) {

        audit['id'] = fieldPairs[0];
        for (int i = 1; i < fieldPairs.length; i++) {

          String[] parts = fieldPairs[i].splitOnToken('=');
          if (parts.length == 2) {

            String key = parts[0];  
            String value = parts[1];
            if (value.length() >= 2) {
              value = value.substring(1, value.length() - 1);
            }
            audit[key] = value;
          }
        }

        ctx['audit'] = audit;
        ctx.remove('message');
      }
    }
  }
}"
      },
      "remove": {
        "field": ["log", "marker", "stream", "fields"],
        "ignore_missing": true
      }
    }
  ]
}
